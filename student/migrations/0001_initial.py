# Generated by Django 4.1.7 on 2023-03-28 22:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='university',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('cne', models.CharField(max_length=12, primary_key=True, serialize=False, unique=True)),
                ('nom', models.CharField(max_length=12)),
                ('prenom', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('confirmpassword', models.CharField(max_length=100, null=True)),
                ('DateNaissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=50, null=True)),
                ('pays_naissance', models.CharField(max_length=50, null=True)),
                ('nationalite', models.CharField(max_length=50, null=True)),
                ('sexe', models.CharField(choices=[('Masculin', 'Masculin'), ('Feminin', 'Feminin')], max_length=10, null=True)),
                ('situation_familiale', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Marie', 'Marie'), ('Divorce', 'Divorce')], max_length=30, null=True)),
                ('adresse', models.CharField(max_length=200, null=True)),
                ('serie_bac', models.CharField(choices=[('2010-2011', '2010-2011'), ('2011-2012', '2011-2012'), ('2012-2013', '2012-2013'), ('2013-2014', '2013-2014'), ('2014-2015', '2014-2015'), ('2015-2016', '2015-2016'), ('2016-2017', '2016-2017'), ('2017-2018', '2017-2018'), ('2018-2019', '2018-2019'), ('2019-2020', '2019-2020')], max_length=10, null=True)),
                ('mention_bac', models.CharField(choices=[('Bien', 'Bien'), ('Tres Bien', 'Tres Bien'), ('Assez Bien', 'Assez Bien')], max_length=20, null=True)),
                ('province_bac', models.CharField(max_length=50, null=True)),
                ('diplome', models.CharField(choices=[('DUT', 'DUT'), ('DEUG', 'DEUG'), ('Licence', 'Licence')], max_length=10, null=True)),
                ('Etablissement', models.CharField(max_length=200, null=True)),
                ('Numerotelephone', models.IntegerField()),
                ('profile_pic', models.ImageField(default='student/img/user.png', upload_to='student/img')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=300)),
                ('university', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.university')),
            ],
        ),
        migrations.CreateModel(
            name='concours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('filliere', models.CharField(max_length=300)),
                ('seuille', models.IntegerField()),
                ('etablissement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.etablissement')),
            ],
        ),
        migrations.CreateModel(
            name='attente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classement', models.IntegerField(blank=True, null=True)),
                ('note', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('A', 'Admis'), ('R', 'Refus')], max_length=1, null=True)),
                ('concour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.concours')),
                ('etudiant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='student.etudiant')),
            ],
            options={
                'ordering': ['-note', 'date_creation'],
            },
        ),
    ]
